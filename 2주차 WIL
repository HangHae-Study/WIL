1. 문제
- TDD라는 하나의 컨셉에 꽂혀, 객체지향적으로 코딩을 하지 못 하였습니다.

2. 시도
- 타 팀원들 코드나, BP 분들의 멋진 프로젝트 코드를 보고 제 코드와 비교하며 부족한 점이 무엇인지 확인하였어요.

3. 해결
- 멘토링 때 질문드리고, 받았던 피드백을 정리하였습니다.

4. 알게된 것
- TDD의 기본 개념과, 다른 분들의 코드 관리법 책임분리에 대한 기본적인 컨셉을 잘 배웠습니다.

5. 지난 목표 회고
- TDD 에 대한 개념은 이해했지만, 아직 까지는 부족한 듯 합니다.

6. 다음 목표 설정
- 이번 주는 설계를 잘 하고, 앞으로 있을 구현에서 더 확실하게 코드를 잘 작성할 수 있도록 노력해보기.

#명확한설계 #유연한확장
